{"version":3,"sources":["hooks/http.hook.js","hooks/message.hook.js","pages/RegistrationPage.js","context/AuthContext.js","pages/AuthPage.js","pages/UsersPage.js","components/Navbar.js","App.js","hooks/auth.hook.js","routes.js","serviceWorker.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","useMessage","text","window","M","toast","html","RegistrationPage","username","email","password","form","setForm","useEffect","updateTextFields","changeHandler","event","target","name","value","registerHandler","className","style","textAlign","id","type","onChange","htmlFor","paddingTop","to","marginRight","onClick","disabled","noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","AuthPage","auth","useContext","loginHandler","UsersPage","props","renderList","state","users","map","currentUser","key","_id","e","setState","prevState","allChecked","user","isChecked","every","find","undefined","checked","handleClick","Date","registrationDate","toLocaleString","lastLoginDate","width","status","itemName","deleteUser","filter","forEach","axios","delete","then","console","log","x","parse","localStorage","getItem","removeItem","location","reload","blockUser","post","res","some","unblockUser","get","catch","this","marginLeft","Component","Navbar","history","useHistory","href","preventDefault","push","App","setToken","setUserId","jwtToken","setItem","useAuth","routes","path","exact","useRoutes","Provider","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4ca641d5.chunk.js","sourcesContent":["import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState(null)\r\n\r\n  const request = useCallback(\r\n    async (url, method = 'GET', body = 'null', headers = {}) => {\r\n    setLoading(true)\r\n    try {\r\n      if (body) {\r\n        body = JSON.stringify(body)\r\n        headers['Content-Type'] = 'application/json'\r\n      }\r\n\r\n      const response = await fetch(url, {method, body, headers})\r\n      const data = await response.json()\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'smth went wrong')\r\n      }\r\n\r\n      setLoading(false)\r\n\r\n      return data\r\n    } catch (e) {\r\n      setLoading(false)\r\n      setError(e.message)\r\n      throw e\r\n    }\r\n  }, [])\r\n\r\n  const clearError = useCallback(() => setError(null), [])\r\n\r\n  return { loading, request, error, clearError }\r\n}\r\n","import {useCallback} from 'react';\r\n\r\nexport const useMessage = () => {\r\n  return useCallback(text => {\r\n    if (window.M && text) {\r\n      window.M.toast({ html: text })\r\n    }\r\n  }, [])\r\n}\r\n","import React, {useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {useHttp} from '../hooks/http.hook';\r\nimport {useMessage} from '../hooks/message.hook';\r\n\r\n\r\nexport const RegistrationPage = () => {\r\n  const message = useMessage()\r\n  const {loading, request, error, clearError} = useHttp()\r\n  const [form, setForm] = useState({\r\n    username: '', email: '', password: ''\r\n  })\r\n\r\n  useEffect(() => {\r\n    message(error)\r\n    clearError()\r\n  }, [error, message, clearError])\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields()\r\n  }, [])\r\n\r\n  const changeHandler = event => {\r\n    setForm({ ...form, [event.target.name]: event.target.value })\r\n  }\r\n\r\n  const registerHandler = async () => {\r\n    try {\r\n      const data = await request('/api/auth/register', 'POST', {...form})\r\n      message(data.message)\r\n    } catch (e) {}\r\n  }\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className=\"col s10 m5 offset-s1 offset-m3\" style={{ textAlign: 'center' }}>\r\n        <h1>Notes App</h1>\r\n        <div className=\"card\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">\r\n              <h5>Sign Up</h5>\r\n            </span>\r\n            <div>\r\n\r\n              <div className=\"input-field\">\r\n                <i className=\"material-icons prefix\">account_circle</i>\r\n                <input\r\n                  className=\"pink-input\"\r\n                  id=\"username\"\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"username\">Username</label>\r\n              </div>\r\n              <div className=\"input-field\">\r\n                <i className=\"material-icons prefix\">email</i>\r\n                <input\r\n                  className=\"pink-input\"\r\n                  id=\"email\"\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"email\">Email</label>\r\n              </div>\r\n              <div className=\"input-field\">\r\n                <i className=\"material-icons prefix\">lock</i>\r\n                <input\r\n                  className=\"pink-input\"\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"password\">Password</label>\r\n                <div style={{paddingTop: '1.5em'}}>\r\n                  <Link to=\"/\">Sign In</Link>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"card-action\">\r\n            <button\r\n              className=\"btn pink darken-2\"\r\n              style={{marginRight: '10px'}}\r\n              onClick={registerHandler}\r\n              disabled={loading}\r\n            >\r\n              Sign Up\r\n            </button>\r\n            {/* <button\r\n              className=\"btn pink lighten-3\"\r\n              onClick={registerHandler}\r\n              disabled={loading}\r\n            >\r\n              Register\r\n            </button> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {createContext} from 'react';\r\n\r\nfunction noop() {}\r\n\r\nexport const AuthContext = createContext({\r\n  token: null,\r\n  userId: null,\r\n  login: noop,\r\n  logout: noop,\r\n  isAuthenticated: false\r\n})\r\n","import React, {useState, useEffect, useContext} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {useHttp} from '../hooks/http.hook';\r\nimport {useMessage} from '../hooks/message.hook';\r\nimport {AuthContext} from '../context/AuthContext';\r\n\r\nexport const AuthPage = () => {\r\n  const auth = useContext(AuthContext)\r\n\r\n  const message = useMessage()\r\n  const {loading, request, error, clearError} = useHttp()\r\n  const [form, setForm] = useState({\r\n    email: '', password: ''\r\n  })\r\n\r\n  useEffect(() => {\r\n    message(error)\r\n    clearError()\r\n  }, [error, message, clearError])\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields()\r\n  }, [])\r\n\r\n  const changeHandler = event => {\r\n    setForm({ ...form, [event.target.name]: event.target.value })\r\n  }\r\n\r\n  const loginHandler = async () => {\r\n    try {\r\n      const data = await request('/api/auth/login', 'POST', {...form})\r\n      auth.login(data.token, data.userId)\r\n    } catch (e) {}\r\n  }\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className=\"col s10 m5 offset-s1 offset-m3\" style={{ textAlign: 'center' }}>\r\n        <h1>Notes App</h1>\r\n        <div className=\"card\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">\r\n              <h5>Sign In</h5>\r\n            </span>\r\n            <div>\r\n\r\n              <div className=\"input-field\">\r\n                <i className=\"material-icons prefix\">email</i>\r\n                <input\r\n                  className=\"pink-input\"\r\n                  id=\"email\"\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"email\">Email</label>\r\n              </div>\r\n              <div className=\"input-field\">\r\n                <i className=\"material-icons prefix\">lock</i>\r\n                <input\r\n                  className=\"pink-input\"\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"password\">Password</label>\r\n                <p style={{paddingTop: '1.5em'}}>\r\n                  Don't have an account?\r\n                </p>\r\n                <div>\r\n                  <Link to=\"/signup\">Sign Up</Link>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"card-action\">\r\n            <button\r\n              className=\"btn pink darken-2\"\r\n              style={{marginRight: '10px'}}\r\n              onClick={loginHandler}\r\n              disabled={loading}\r\n            >\r\n              Sign In\r\n            </button>\r\n            {/* <button\r\n              className=\"btn pink lighten-3\"\r\n              onClick={registerHandler}\r\n              disabled={loading}\r\n            >\r\n              Register\r\n            </button> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class UsersPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      allChecked: false,\r\n      users: []\r\n     };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    axios.get('/api/users')\r\n      .then(response => {\r\n        this.setState({\r\n          users: response.data.map(user => ({ ...user, isChecked: false }))\r\n        })\r\n      })\r\n      .catch((error) => { console.log(error) })\r\n  }\r\n\r\n  renderList = () => {\r\n    return this.state.users.map(currentUser => (\r\n      <tr\r\n        key={currentUser._id}\r\n        onClick={(e) => {\r\n          let id = currentUser._id;\r\n\r\n          this.setState(prevState => {\r\n            let { users, allChecked } = prevState;\r\n              users = users.map(user =>\r\n                user._id === id ? { ...user, isChecked: !user.isChecked } : user\r\n              );\r\n              allChecked = users.every(user => user.isChecked);\r\n              return { users, allChecked };\r\n            })\r\n          }\r\n        }\r\n        className={this.state.users.find(user => user._id === currentUser._id).isChecked ? 'checked' : undefined}\r\n      >\r\n        <td>\r\n\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              key={currentUser._id}\r\n              name={currentUser.username}\r\n              value={currentUser.username}\r\n              checked={currentUser.isChecked}\r\n              onChange={this.handleClick}\r\n              className=\"filled-in\"\r\n            />\r\n            <span></span>\r\n          </label>\r\n\r\n        </td>\r\n\r\n        <td>{currentUser.username}</td>\r\n        <td>{currentUser.email}</td>\r\n        <td>{currentUser._id}</td>\r\n        <td>{new Date(currentUser.registrationDate).toLocaleString()}</td>\r\n        <td>{new Date(currentUser.lastLoginDate).toLocaleString()}</td>\r\n        <td style={{width: '70px'}} className={currentUser.status}>{currentUser.status}</td>\r\n\r\n      </tr>\r\n    ));\r\n  };\r\n\r\n  handleClick = (e) => {\r\n    let itemName = e.target.name;\r\n    let checked = e.target.checked;\r\n\r\n    this.setState(prevState => {\r\n      let { users, allChecked } = prevState;\r\n      if (itemName === \"checkAll\") {\r\n        allChecked = checked;\r\n        users = users.map(user => ({ ...user, isChecked: checked }));\r\n      } else {\r\n        users = users.map(user =>\r\n          user.username === itemName ? { ...user, isChecked: !user.isChecked } : user\r\n        );\r\n        allChecked = users.every(user => user.isChecked);\r\n      }\r\n      return { users, allChecked };\r\n    });\r\n  };\r\n\r\n  deleteUser = () => {\r\n    let checked = this.state.users.filter(user => user.isChecked)\r\n    checked.forEach(user => {\r\n      axios.delete('/api/users/' + user._id)\r\n        .then(response => { console.log(response.data)})\r\n        .then(() => {\r\n          this.setState(prevState => {\r\n             return { users: prevState.users.filter(x => x._id !== user._id) }\r\n          })\r\n          if (JSON.parse(localStorage.getItem('userData')).userId === user._id) {\r\n            localStorage.removeItem('userData');\r\n            window.location.reload();\r\n          }\r\n        })\r\n    })\r\n  }\r\n\r\n  blockUser = () => {\r\n    let checked = this.state.users.filter(user => user.isChecked);\r\n    checked.forEach(user => {\r\n      user.status = 'Blocked'\r\n      this.setState(prevState => {\r\n        return { users: prevState.users.map(x => ({ ...x, user })) }\r\n      })\r\n      axios.post('/api/users/' + user._id + '/update/', user).then(res => console.log(res.data))\r\n    });\r\n\r\n    if (checked.some(user => JSON.parse(localStorage.getItem('userData')).userId === user._id)) {\r\n      localStorage.removeItem('userData');\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\n  unblockUser = () => {\r\n    let checked = this.state.users.filter(user => user.isChecked);\r\n    checked.forEach(user => {\r\n      user.status = 'Active'\r\n      this.setState(prevState => {\r\n        return { users: prevState.users.map(x => ({ ...x, user })) }\r\n      })\r\n      axios.post('/api/users/' + user._id + '/update/', user).then(res => console.log(res.data))\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Users</h3>\r\n        <table className=\"table\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th>\r\n                <label htmlFor=\"checkAll\">\r\n                  <input\r\n                    id=\"checkAll\"\r\n                    name=\"checkAll\"\r\n                    type=\"checkbox\"\r\n                    className=\"filled-in\"\r\n                    onChange={this.handleClick}\r\n                    checked={this.state.allChecked}\r\n                  />\r\n                  <span></span>\r\n                </label>\r\n              </th>\r\n              <th>Username</th>\r\n              <th>Email</th>\r\n              <th>ID</th>\r\n              <th>Registration Date</th>\r\n              <th>Last Login Date</th>\r\n              <th>Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            { this.renderList() }\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n            <button\r\n              onClick={this.deleteUser}\r\n              className=\"btn pink darken-2 waves-effect waves-light\"\r\n            >\r\n                Delete\r\n               <i className=\"material-icons-outlined right\">delete</i>\r\n            </button>\r\n            <button\r\n              onClick={this.blockUser}\r\n              className=\"btn pink darken-2 waves-effect waves-light\"\r\n              style={{\r\n                  marginLeft: '1em',\r\n                  marginRight: '1em'\r\n              }}\r\n            >\r\n                Block\r\n               <i className=\"material-icons-outlined right\">lock</i>\r\n            </button>\r\n            <button\r\n              onClick={this.unblockUser}\r\n              className=\"btn pink darken-2 waves-effect waves-light\"\r\n            >\r\n                Unblock\r\n               <i className=\"material-icons right\">lock_open</i>\r\n            </button>\r\n        </p>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {NavLink, useHistory} from 'react-router-dom';\r\nimport {AuthContext} from '../context/AuthContext';\r\n\r\nexport const Navbar = () => {\r\n  const history = useHistory()\r\n  const auth = useContext(AuthContext)\r\n\r\n  const logoutHandler = (event) => {\r\n    event.preventDefault()\r\n    auth.logout()\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <div className=\"navbar-fixed\">\r\n      <nav>\r\n        <div className=\"nav-wrapper pink darken-2\">\r\n          <div className=\"container\">\r\n            <span className=\"brand-logo\">\r\n              Notes App\r\n            </span>\r\n            <ul id=\"nav-mobile\" className=\"right hide-on-small-and-down\">\r\n              <li>\r\n                <NavLink to='/users'>Users</NavLink>\r\n              </li>\r\n              <li>\r\n                <a href='/' onClick={logoutHandler}><i className=\"material-icons right\">logout</i></a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport {useRoutes} from './routes';\r\nimport {useAuth} from './hooks/auth.hook';\r\nimport {AuthContext} from './context/AuthContext';\r\nimport 'materialize-css';\r\nimport {Navbar} from './components/Navbar';\r\n\r\nfunction App() {\r\n  const {token, login, logout, userId} = useAuth()\r\n  const isAuthenticated = !!token\r\n  const routes = useRoutes(isAuthenticated)\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      token, login, logout, userId, isAuthenticated\r\n    }}>\r\n      <Router>\r\n        { isAuthenticated && <Navbar /> }\r\n        <div className='container'>\r\n          {routes}\r\n        </div>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import {useState, useCallback, useEffect} from 'react';\r\n\r\nconst storageName = 'userData'\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(null)\r\n  const [userId, setUserId] = useState(null)\r\n\r\n  const login = useCallback((jwtToken, id) => {\r\n    setToken(jwtToken)\r\n    setUserId(id)\r\n\r\n    localStorage.setItem(storageName, JSON.stringify({\r\n      userId: id, token: jwtToken\r\n    }))\r\n  }, [])\r\n  const logout = useCallback(() => {\r\n    setToken(null)\r\n    setUserId(null)\r\n    localStorage.removeItem(storageName)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(storageName))\r\n\r\n    if (data && data.token) {\r\n      login(data.token, data.userId)\r\n    }\r\n  }, [login])\r\n\r\n  return { login, logout, token, userId }\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { RegistrationPage } from './pages/RegistrationPage';\r\nimport { AuthPage } from './pages/AuthPage';\r\nimport UsersPage from './pages/UsersPage';\r\n\r\nexport const useRoutes = isAuthenticated => {\r\n  if (isAuthenticated) {\r\n    return (\r\n      <Switch>\r\n\r\n        <Route path=\"/users\" exact>\r\n          <UsersPage />\r\n        </Route>\r\n        <Redirect to=\"/users\" />\r\n\r\n      </Switch>\r\n    );\r\n  }\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        <AuthPage />\r\n      </Route>\r\n      <Route path=\"/signup\" exact>\r\n        <RegistrationPage />\r\n      </Route>\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}